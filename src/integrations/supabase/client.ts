// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://lssstowqibhdqndagzga.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imxzc3N0b3dxaWJoZHFuZGFnemdhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI4MDc5MTQsImV4cCI6MjA1ODM4MzkxNH0.Dpjs_C0SYuDISktTGFR76XUPe2KT5FXxeJY5LPH13Ug";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Mock implementation to avoid build errors
export const supabase = {
  auth: {
    getSession: async () => ({ data: { session: null }, error: null }),
    onAuthStateChange: () => ({ data: { subscription: { unsubscribe: () => {} } }, error: null }),
    signInWithPassword: async () => ({ data: null, error: null }),
    signInWithOAuth: async () => ({ data: null, error: null }),
    signUp: async () => ({ data: null, error: null }),
  },
  storage: {
    from: () => ({
      getPublicUrl: () => ({ data: { publicUrl: '' } }),
    }),
  },
  // Add any other methods that might be used in the app
  rpc: async () => ({ data: null, error: null }),
  from: () => ({
    select: () => ({
      eq: () => ({
        single: async () => ({ data: null, error: null }),
        order: () => ({
          limit: () => ({
            then: async () => ({ data: [], error: null }),
          }),
        }),
      }),
    }),
    insert: async () => ({ data: null, error: null }),
    update: async () => ({ data: null, error: null }),
    delete: async () => ({ data: null, error: null }),
  }),
};